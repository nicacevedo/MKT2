dir = './Tarea2/Dataset/Anime2_Logit.csv' # Nueva base actualizada
df <- read.table(file=dir, header=TRUE, sep=",")		#complete data file loaded in a matrix*/
df$Eleccion <- as.factor(df$Eleccion)
# Cambio de formato ####
df_formateada <- mlogit.data(df, shape="wide", varying=4:ncol(df), choice="Eleccion")		#format the data
#run logit model
# cat("mlogit - logit\n")
animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Rating | Edad + Mujer, data = df_formateada)
#animelogit <- mlogit(Eleccion ~ 0 | Mujer, data = df_formateada)
summary(animelogit)
# Base de datos ####
dir = './Tarea2/Dataset/Anime2_Logit.csv' # Nueva base actualizada
df <- read.table(file=dir, header=TRUE, sep=",")		#complete data file loaded in a matrix*/
df$Eleccion <- as.factor(df$Eleccion)
# Cambio de formato ####
df_formateada <- mlogit.data(df, shape="wide", varying=4:ncol(df), choice="Eleccion")		#format the data
#run logit model
# cat("mlogit - logit\n")
animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Rating | Mujer, data = df_formateada)
#animelogit <- mlogit(Eleccion ~ 0 | Mujer, data = df_formateada)
summary(animelogit)
# Base de datos ####
dir = './Tarea2/Dataset/Anime2_Logit.csv' # Nueva base actualizada
df <- read.table(file=dir, header=TRUE, sep=",")		#complete data file loaded in a matrix*/
df$Eleccion <- as.factor(df$Eleccion)
# Cambio de formato ####
df_formateada <- mlogit.data(df, shape="wide", varying=4:ncol(df), choice="Eleccion")		#format the data
#run logit model
# cat("mlogit - logit\n")
animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Rating | Mujer, data = df_formateada)
#animelogit <- mlogit(Eleccion ~ 0 | Mujer, data = df_formateada)
summary(animelogit)
# Base de datos ####
dir = './Tarea2/Dataset/Anime2_Logit.csv' # Nueva base actualizada
df <- read.table(file=dir, header=TRUE, sep=",")		#complete data file loaded in a matrix*/
df$Eleccion <- as.factor(df$Eleccion)
# Cambio de formato ####
df_formateada <- mlogit.data(df, shape="wide", varying=4:ncol(df), choice="Eleccion")		#format the data
#run logit model
# cat("mlogit - logit\n")
animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Rating | Mujer, data = df_formateada)
#animelogit <- mlogit(Eleccion ~ 0 | Mujer, data = df_formateada)
summary(animelogit)
# Base de datos ####
dir = './Tarea2/Dataset/Anime2_Logit.csv' # Nueva base actualizada
df <- read.table(file=dir, header=TRUE, sep=",")		#complete data file loaded in a matrix*/
df$Eleccion <- as.factor(df$Eleccion)
# Cambio de formato ####
df_formateada <- mlogit.data(df, shape="wide", varying=4:ncol(df), choice="Eleccion")		#format the data
#run logit model
# cat("mlogit - logit\n")
animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Rating | Mujer, data = df_formateada)
#animelogit <- mlogit(Eleccion ~ 0 | Mujer, data = df_formateada)
summary(animelogit)
# Limpieza de entorno ####
rm(list=ls())       # clear the list of objects
graphics.off()			# clear the list of graphs
options(digits = 3)	# number of digits to display
# Liberías ####
library(mlogit)			# load package to compare
library(mnlogit)
# Base de datos ####
dir = './Tarea2/Dataset/Anime2_Logit.csv' # Nueva base actualizada
df <- read.table(file=dir, header=TRUE, sep=",")		#complete data file loaded in a matrix*/
df$Eleccion <- as.factor(df$Eleccion)
# Cambio de formato ####
df_formateada <- mlogit.data(df, shape="wide", varying=4:ncol(df), choice="Eleccion")		#format the data
#run logit model
# cat("mlogit - logit\n")
animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Rating | Mujer, data = df_formateada)
#animelogit <- mlogit(Eleccion ~ 0 | Mujer, data = df_formateada)
summary(animelogit)
View(df)
View(df)
# Base de datos ####
dir = './Tarea2/Dataset/Anime2_Logit.csv' # Nueva base actualizada
df <- read.table(file=dir, header=TRUE, sep=",")		#complete data file loaded in a matrix*/
df$Eleccion <- as.factor(df$Eleccion)
# Cambio de formato ####
df_formateada <- mlogit.data(df, shape="wide", varying=3:ncol(df), choice="Eleccion")		#format the data
#run logit model
# cat("mlogit - logit\n")
animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Rating | Mujer, data = df_formateada)
#animelogit <- mlogit(Eleccion ~ 0 | Mujer, data = df_formateada)
summary(animelogit)
# Base de datos ####
dir = './Tarea2/Dataset/Anime2_Logit.csv' # Nueva base actualizada
df <- read.table(file=dir, header=TRUE, sep=",")		#complete data file loaded in a matrix*/
df$Eleccion <- as.factor(df$Eleccion)
# Cambio de formato ####
df_formateada <- mlogit.data(df, shape="wide", varying=3:ncol(df), choice="Eleccion")		#format the data
#run logit model
# cat("mlogit - logit\n")
animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual | Mujer, data = df_formateada)
#animelogit <- mlogit(Eleccion ~ 0 | Mujer, data = df_formateada)
summary(animelogit)
knitr::opts_chunk$set(echo = TRUE)
#Exploración de datos
# Cargamos librerias útiles
library(dplyr)
library(knitr)
library(readr)
library(lubridate)
library(ggplot2)
library(lattice)
library(caret)
library(Metrics)
#  if ( col != 'X1' ){
#    feature = df[[col]]
#    #1. Histograma variable de interes
#    gg <- ggplot(data=df, aes(x=feature, col=factor(Eleccion))) + #Se define un gráfico con ggplot()
#      geom_bar(fill='white', alpha=0.5, position = 'identity') +
#      xlab(col)# Se
#      #theme(plot.title = element_text(hjust = 0.5))
#    print(gg)
#  }
#}
install.packages('Metrics')
# Liberías ####
library(mlogit)			# load package to compare
library(mnlogit)
# Base de datos ####
dir = './Dataset/Anime2_Logit.csv' # Nueva base actualizada
df <- read.table(file=dir, header=TRUE, sep=",")
df$Eleccion <- as.factor(df$Eleccion)
# Cambio de formato ####
df_anime <- mlogit.data(df, shape="wide", varying=4:ncol(df), choice="Eleccion")		#format the data
#run logit model
# cat("mlogit - logit\n")
#Exploración de datos
# Cargamos librerias útiles
library(dplyr)
library(knitr)
library(readr)
library(lubridate)
library(ggplot2)
library(lattice)
library(caret)
library(Metrics)
#Base de datos
df <- read_csv("./Dataset/Anime2.csv")
#for (col in names(df)){
#  print(col)
#  if ( col != 'X1' ){
#    feature = df[[col]]
#    #1. Histograma variable de interes
#    gg <- ggplot(data=df, aes(x=feature, col=factor(Eleccion))) + #Se define un gráfico con ggplot()
#      geom_bar(fill='white', alpha=0.5, position = 'identity') +
#      xlab(col)# Se
#      #theme(plot.title = element_text(hjust = 0.5))
#    print(gg)
#  }
#}
# Liberías ####
library(mlogit)			# load package to compare
library(mnlogit)
# Base de datos ####
dir = './Dataset/Anime2_Logit.csv' # Nueva base actualizada
df <- read.table(file=dir, header=TRUE, sep=",")
df$Eleccion <- as.factor(df$Eleccion)
# Cambio de formato ####
df_anime <- mlogit.data(df, shape="wide", varying=4:ncol(df), choice="Eleccion")		#format the data
#run logit model
# cat("mlogit - logit\n")
#logit
animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Duration + Rating | Edad + Mujer, data = df_anime)
#animelogit <- mlogit(Eleccion ~ 0 | Mujer, data = df_formateada)
summary(animelogit)
#mixed logit
mixed_animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Duration + Rating | Edad + Mujer, data = df_anime,
rpar=c("hunterX:(intercept)"="n")#, "(intercept):dragonball"="n", "(intercept):naruto"="n")#, "Combat"="n", "Emotion"="n", "Qual" = "n", "Duration" = "n", "Rating" = "n")
)
#mixed logit
mixed_animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Duration + Rating | Edad + Mujer, data = df_anime,
rpar=c("hunterX:(Intercept)"="n")#, "(intercept):dragonball"="n", "(intercept):naruto"="n")#, "Combat"="n", "Emotion"="n", "Qual" = "n", "Duration" = "n", "Rating" = "n")
)
#mixed logit
mixed_animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Duration + Rating | Edad + Mujer, data = df_anime,
rpar=c("(Intercept):hunterX"="n")#, "(intercept):dragonball"="n", "(intercept):naruto"="n")#, "Combat"="n", "Emotion"="n", "Qual" = "n", "Duration" = "n", "Rating" = "n")
)
summary(mixed_animelogit)
knitr::opts_chunk$set(echo = TRUE)
#  if ( col != 'X1' ){
#    feature = df[[col]]
#    #1. Histograma variable de interes
#    gg <- ggplot(data=df, aes(x=feature, col=factor(Eleccion))) + #Se define un gráfico con ggplot()
#      geom_bar(fill='white', alpha=0.5, position = 'identity') +
#      xlab(col)# Se
#      #theme(plot.title = element_text(hjust = 0.5))
#    print(gg)
#  }
#}
#run logit model
# cat("mlogit - logit\n")
# Liberías ####
library(mlogit)			# load package to compare
library(mnlogit)
# Base de datos ####
dir = './Dataset/Anime2_Logit.csv' # Nueva base actualizada
df <- read.table(file=dir, header=TRUE, sep=",")
df$Eleccion <- as.factor(df$Eleccion)
# Cambio de formato ####
df_anime <- mlogit.data(df, shape="wide", varying=4:ncol(df), choice="Eleccion")		#format the data
#run logit model
# cat("mlogit - logit\n")
#logit
animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Rating | Edad + Mujer, data = df_anime)
#animelogit <- mlogit(Eleccion ~ 0 | Mujer, data = df_formateada)
summary(animelogit)
intercepto = coef(animelogit)[0:3]
individual_coef = tail(coef(animelogit), n=6)
V = c(1:3)
for (i in c(1:3)){
V[i] = intercepto[i] + individual_coef[i]*25 + individual_coef[i+3]
}
prob_naruto = exp(V[3])/(sum(exp(V))+1)
print("Mujer de 25 años, probabilidad elegir Naruto: ")
print(prob_naruto)
#print("Mujer de 25 años, probabilidad elegir Naruto = ", as.character(prob_naruto))
#mixed logit
mixed_animelogit <- mlogit(Eleccion ~ Combat + Emotion + Qual + Rating | Edad + Mujer, data = df_anime,
rpar=c("hunterX:(intercept)"="n", "dragonball:(intercept)"="n", "naruto:(intercept)"="n", "Combat"="n", "Emotion"="n", "Qual"="n", "Rating"="n")#, "(intercept):dragonball"="n", "(intercept):naruto"="n")#, "Combat"="n", "Emotion"="n", "Qual" = "n", "Duration" = "n", "Rating" = "n")
)
getwd()
#probit
#logit
X_train <- read_csv('./Tarea2/Dataset/Anime2_X_train.csv')
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
#t1 = Sys.time()
#animeprobit <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_anime2, probit= TRUE)
#
#summary(animeprobit)
#t2 = Sys.time()
#print(t2-t1)
View(X_train)
View(y_train)
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train
df_train$Eleccion <- 0
df_train$Eleccion <- y_train
#t1 = Sys.time()
#animeprobit <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_anime2, probit= TRUE)
#
#summary(animeprobit)
#t2 = Sys.time()
#print(t2-t1)
View(df_train)
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
#t1 = Sys.time()
#animeprobit <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_anime2, probit= TRUE)
#
#summary(animeprobit)
#t2 = Sys.time()
#print(t2-t1)
View(df_train)
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train[,1:]
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train[,1:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
#t1 = Sys.time()
#animeprobit <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_anime2, probit= TRUE)
#
#summary(animeprobit)
#t2 = Sys.time()
#print(t2-t1)
View(df_train)
View(df_train)
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
#t1 = Sys.time()
#animeprobit <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_anime2, probit= TRUE)
#
#summary(animeprobit)
#t2 = Sys.time()
#print(t2-t1)
View(df_train)
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
t1 = Sys.time()
animeprobit <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_train, probit= TRUE)
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv', skip=1)
y_train <- read_csv('./Dataset/Anime2_y_train.csv', skip=1)
df_train <- X_train #[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
t1 = Sys.time()
animeprobit <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_train, probit= TRUE)
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv', skip='X1')
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train #[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
t1 = Sys.time()
animeprobit <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_train, probit= TRUE)
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train #[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
df_train$Eleccion <- as.factor(df_train$Eleccion)
t1 = Sys.time()
animeprobit <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_train, probit= TRUE)
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train #[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
df_train$Eleccion <- as.factor(df_train$Eleccion)
df_train_wide <- mlogit.data(df_train, shape="wide", varying=1:(ncol(df2)-1), choice="Eleccion")
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train #[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
df_train$Eleccion <- as.factor(df_train$Eleccion)
df_train_wide <- mlogit.data(df_train, shape="wide", varying=1:(ncol(df_train)-1), choice="Eleccion")
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
df_train$Eleccion <- as.factor(df_train$Eleccion)
df_train_wide <- mlogit.data(df_train, shape="wide", varying=1:(ncol(df_train)-1), choice="Eleccion")
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
df_train_wide <- mlogit.data(df_train, shape="wide", varying=1:(ncol(df_train)-1), choice="Eleccion")
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
df_train_wide <- mlogit.data(df_train, shape="wide", varying=1:22, choice="Eleccion")
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
df_train_wide <- mlogit.data(df_train, shape="wide", varying=2:22, choice="Eleccion")
View(df_train)
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
df_train_wide <- mlogit.data(df_train, shape="wide", varying=1:22, choice="Eleccion")
#probit
#logit
X_train <- read_csv('./Dataset/Anime2_X_train.csv')
y_train <- read_csv('./Dataset/Anime2_y_train.csv')
df_train <- X_train[,2:ncol(X_train)]
df_train$Eleccion <- 0
df_train$Eleccion <- y_train$Eleccion
df_train_wide <- mlogit.data(df_train, shape="wide", varying=3:22, choice="Eleccion")
t1 = Sys.time()
animeprobit <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_train_wide, probit= TRUE)
summary(animeprobit)
t2 = Sys.time()
print(t2-t1)
df2 = df[sample(nrow(df), 1000, replace=F), ]
df_anime2 <- mlogit.data(df2, shape="wide", varying=4:ncol(df2), choice="Eleccion")
df2 = df[sample(nrow(df), 1000, replace=F), ]
df_anime2 <- mlogit.data(df2, shape="wide", varying=4:ncol(df2), choice="Eleccion")
df2 = df[sample(nrow(df), 1000, replace=F), ]
df_anime2 <- mlogit.data(df2, shape="wide", varying=4:ncol(df2), choice="Eleccion")
View(df_anime2)
df2 = df[sample(nrow(df), 1000, replace=F), ]
df_anime2 <- mlogit.data(df2, shape="wide", varying=4:ncol(df2), choice="Eleccion")
df2 = df[sample(nrow(df), 2000, replace=F), ]
df_anime2 <- mlogit.data(df2, shape="wide", varying=4:ncol(df2), choice="Eleccion")
df2 = df[sample(nrow(df), 1000, replace=F), ]
df_anime2 <- mlogit.data(df2, shape="wide", varying=4:ncol(df2), choice="Eleccion")
#probit
#logit
t1 = Sys.time()
animeprobit <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_anime2, probit= TRUE)
summary(animeprobit)
t2 = Sys.time()
print(t2-t1)
#ML 1
X_test <- read_csv('./Dataset/Anime2_X_test.csv')
y_test <- read_csv('./Dataset/Anime2_y_test.csv')
#df_train_wide <- mlogit.data(X_, shape="wide", varying=3:22, choice="Eleccion")
logit1 <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_train_wide, probit= TRUE)
#ML 1
X_test <- read_csv('./Dataset/Anime2_X_test.csv')
y_test <- read_csv('./Dataset/Anime2_y_test.csv')
#df_train_wide <- mlogit.data(X_, shape="wide", varying=3:22, choice="Eleccion")
logit1 <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_train_wide)
summary(logit1)
predict(logit1, X_test)
#ML 1
X_test <- read_csv('./Dataset/Anime2_X_test.csv')
y_test <- read_csv('./Dataset/Anime2_y_test.csv')
df_test <- df_train <- X_test[,2:ncol(X_test)]
df_test$Eleccion <- 0
df_test$Eleccion <- y_test$Eleccion
df_test_wide <- mlogit.data(df_test, shape="wide", varying=3:22, choice="Eleccion")
logit1 <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_train_wide)
summary(logit1)
#predict(logit1, df_test_wide[])
#ML 1
X_test <- read_csv('./Dataset/Anime2_X_test.csv')
y_test <- read_csv('./Dataset/Anime2_y_test.csv')
df_test <- df_train <- X_test[,2:ncol(X_test)]
df_test$Eleccion <- 0
df_test$Eleccion <- y_test$Eleccion
df_test_wide <- mlogit.data(df_test, shape="wide", varying=3:22, choice="Eleccion")
logit1 <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_train_wide)
summary(logit1)
predict(logit1, df_test_wide[,1:(ncol(df_test_wide)-)])
#ML 1
X_test <- read_csv('./Dataset/Anime2_X_test.csv')
y_test <- read_csv('./Dataset/Anime2_y_test.csv')
df_test <- df_train <- X_test[,2:ncol(X_test)]
df_test$Eleccion <- 0
df_test$Eleccion <- y_test$Eleccion
df_test_wide <- mlogit.data(df_test, shape="wide", varying=3:22, choice="Eleccion")
logit1 <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_train_wide)
summary(logit1)
predict(logit1, df_test_wide[,1:(ncol(df_test_wide)-1)])
#ML 1
X_test <- read_csv('./Dataset/Anime2_X_test.csv')
y_test <- read_csv('./Dataset/Anime2_y_test.csv')
df_test <- df_train <- X_test[,2:ncol(X_test)]
df_test$Eleccion <- 0
df_test$Eleccion <- y_test$Eleccion
df_test_wide <- mlogit.data(df_test, shape="wide", varying=3:22, choice="Eleccion")
logit1 <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_train_wide)
summary(logit1)
library(caret)
y_pred <- predict(logit1, df_test_wide[,1:(ncol(df_test_wide)-1)])
confusionMatrix(y_test, y_pred)
length(y_test)
y_test
#ML 1
X_test <- read_csv('./Dataset/Anime2_X_test.csv')
y_test <- read_csv('./Dataset/Anime2_y_test.csv')
df_test <- df_train <- X_test[,2:ncol(X_test)]
df_test$Eleccion <- 0
df_test$Eleccion <- y_test$Eleccion
df_test_wide <- mlogit.data(df_test, shape="wide", varying=3:22, choice="Eleccion")
logit1 <- mlogit(Eleccion ~ Combat + Emotion + Qual , data = df_train_wide)
summary(logit1)
library(caret)
y_pred <- predict(logit1, df_test_wide[,1:(ncol(df_test_wide)-1)])
confusionMatrix(y_test$Eleccion, y_pred)
len(y_test$Eleccion)
length(y_test$Eleccion)
length(y_pred)
pmax(y_pred)
View(y_pred)
View(y_pred)
View(df_train)
View(df_train)
View(X_train)
View(X_train)
